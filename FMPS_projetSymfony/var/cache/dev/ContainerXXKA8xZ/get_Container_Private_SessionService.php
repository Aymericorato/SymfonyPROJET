<?php

<<<<<<< Updated upstream:FMPS_projetSymfony/var/cache/dev/Container5g4yhtu/get_Container_Private_SessionService.php
namespace Container5g4yhtu;
=======
namespace ContainerXXKA8xZ;

>>>>>>> Stashed changes:FMPS_projetSymfony/var/cache/dev/ContainerXXKA8xZ/get_Container_Private_SessionService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Container_Private_SessionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public '.container.private.session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'Session'.\DIRECTORY_SEPARATOR.'SessionInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'Session'.\DIRECTORY_SEPARATOR.'Session.php';

        return $container->services['.container.private.session'] = ($container->privates['session.factory'] ?? $container->load('getSession_FactoryService'))->createSession();
    }
}
